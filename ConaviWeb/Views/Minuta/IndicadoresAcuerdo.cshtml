@model ConaviWeb.Model.Minuta.Reunion
@{
    Layout = "_LayoutSedatu";
    ViewBag.Title = "Indicadores";

}
<h4>Indicadores Acuerdo</h4>
<hr class="red">
<div class="row mb-12">
    <div class="col-md-6">
        <div class="form-group">
            <strong>Gestión</strong>
            <select class="form-control" id="gestion" name="gestion" asp-items="@(new SelectList((System.Collections.IEnumerable)ViewData["Gestion"], "Clave" , "Descripcion" ))" onchange="getChartPie(); getChartMonth()" required="">
                <option value="">GENERAL</option>
            </select>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <strong>Mes</strong>
            <select class="form-control" id="mes" name="mes" asp-items="@(new SelectList((System.Collections.IEnumerable)ViewData["Meses"], "Clave" , "Descripcion" ))" onchange="getChartMonth()" required="">
                <option value="">GENERAL</option>
            </select>
        </div>
    </div>
</div>
<div class="row justify-content-evenly">
    <div class="col-md-6" id="chart-container"></div>
    <div class="col-md-6" id="chart-container-m"></div>
</div>
    
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
<script>
        $(document).ready(function () {
            getChartPie();
        });

    function getChartPie() {
        let gestion = $("#gestion").val();
        let mes = $("#mes").val();
                $.ajax({
                url: "/IndicadoresAcuerdo/GetIndAcuerdo",
                data: { id: gestion, clave:mes },
                type: 'GET',
                headers: { 'RequestVerificationToken': $('@Html.AntiForgeryToken()').val() },
                //success: function (data) { console.log(data) },
                complete: function (data) {
                    var proceso, pendiente, atendido;
                    $.each(data.responseJSON.data, function (i, val) {
                        if (val.estatus === "En proceso") proceso = val.acuerdos;
                        if (val.estatus === "Pendiente") pendiente = val.acuerdos;
                        if (val.estatus === "Atendido") atendido = val.acuerdos;
                    });
                var dom = document.getElementById('chart-container');
                var myChart = echarts.init(dom, null, {
                    renderer: 'canvas',
                    useDirtyRect: false
                });
                var app = {};

                var option;

                // This example requires ECharts v5.5.0 or later
                option = {
                    tooltip: {
                        trigger: 'item'
                    },
                    legend: {
                        top: '5%',
                        left: 'center'
                    },
                    series: [
                        {
                            name: $("#gestion option:selected").text(),
                            type: 'pie',
                            radius: ['40%', '60%'],
                            center: ['50%', '60%'],
                            // adjust the start and end angle
                            startAngle: 0,
                            endAngle: 360,
                            data: [
                                { value: atendido, name: 'Atendido', itemStyle: { color: '#235B4E' } },
                                { value: proceso, name: 'Proceso', itemStyle: { color: '#DDC9A3' }},
                                { value: pendiente, name: 'Pendiente', itemStyle: { color: '#9F2241' } },
                            ]
                        }
                    ]
                };

                if (option && typeof option === 'object') {
                    myChart.setOption(option);
                }

                    window.addEventListener('resize', myChart.resize);
                    }
                });
        getChartMonth();
            }
    function getChartMonth() {
                let gestion = $("#gestion").val();
                let mes = $("#mes").val();

            $.ajax({
                url: "/IndicadoresAcuerdo/GetIndAcuerdoMes",
                data: { id: gestion, clave:mes },
                type: 'GET',
                headers: { 'RequestVerificationToken': $('@Html.AntiForgeryToken()').val() },
                //success: function (data) { console.log(data) },
                complete: function (data) {
                    var mes = [];
                    var atendido = {"mes":[],"acuerdos":[]};
                    var proceso = {"mes":[],"acuerdos":[]};
                    var pendiente = {"mes":[],"acuerdos":[]};
                    var estatus = "";
                    var iter = 0;
                    let d = data.responseJSON.data;
                    let seriesHeader = mes;
                    //console.log(d[0])
                    let datas = [];
                    const meses = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];
                    const groupByMes = Object.groupBy(data.responseJSON.data, data => {
                        return data.mes;
                    });
                    $.each(groupByMes, function (i, arr) {
                        mes.push(i);   
                    });
                    $.each(d, function (i, val) {
                        //console.log(mes[i]);
                        //if (val.mes == mes[i]) {
                        if (val.estatus === "Atendido") {
                            atendido.acuerdos.push(val.acuerdos)
                            atendido.mes.push(val.mes)
                        }
                        if (val.estatus === "Pendiente") {
                            pendiente.acuerdos.push(val.acuerdos)
                            pendiente.mes.push(val.mes)
                        }
                        if (val.estatus === "En proceso") {
                            proceso.acuerdos.push(val.acuerdos)
                            proceso.mes.push(val.mes)
                        }
                        //}
                    });
                    $.each(mes, function (i, val) {
                        //console.log(val)
                        if (atendido.mes.indexOf(val) === -1) {
                            atendido.acuerdos.splice(i, 0, 0);
                            atendido.mes.splice(i, 0, val);
                        }
                    });
                    $.each(mes, function (i, val) {
                        //console.log(val)
                        if (proceso.mes.indexOf(val) === -1) {
                            proceso.acuerdos.splice(i, 0, 0);
                            proceso.mes.splice(i, 0, val);
                        }
                    });
                    $.each(mes, function (i, val) {
                        //console.log(val)
                        if (pendiente.mes.indexOf(val) === -1) {
                            pendiente.acuerdos.splice(i, 0, 0);
                            pendiente.mes.splice(i, 0, val);
                        }
                    });
                    
                    console.log(atendido);
                    console.log(proceso);
                    console.log(pendiente);
                    var dom = document.getElementById('chart-container-m');
                    var myChart = echarts.init(dom, null, {
                        renderer: 'canvas',
                        useDirtyRect: false
                    });
                    var app = {};

                    var option;
                    //console.log(atendido);
                    option = {
                        tooltip: {
                            trigger: 'axis',
                            axisPointer: {
                                type: 'shadow'
                            }
                        },
                        legend: {
                            top: '5%',
                            left: 'center',
                            selectedMode: false
                        },
                        xAxis: {
                            type: 'category',
                            data: seriesHeader},
                        yAxis: {
                            type: 'value'
                        },
                        legend: {
                            data: ['Atendido', 'En proceso', 'Pendiente']
                        },
                        series: [
                            {
                            name: 'Atendido',
                            type: 'bar',
                            emphasis: {
                                focus: 'series'
                            },
                                itemStyle: { color: '#235B4E' },
                                data: atendido.acuerdos,
                                stack: "stackbar"
                            },
                            {
                            name: 'En proceso',
                            type: 'bar',
                            emphasis: {
                                focus: 'series'
                            },
                            itemStyle: { color: '#DDC9A3' },
                                data: proceso.acuerdos,
                                stack: "stackbar"
                            },
                            {
                                name: 'Pendiente',
                                type: 'bar',
                                emphasis: {
                                    focus: 'series'
                                },
                                itemStyle: { color: '#9F2241' },
                                data: pendiente.acuerdos,
                                stack: "stackbar"
                            }
                        ]
                    };

                    if (option && typeof option === 'object') {
                        myChart.setOption(option);
                    }

                    window.addEventListener('resize', myChart.resize);
                }
            });
        }

</script>
    }
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        #chart-container {
            position: relative;
            height: 70vh;
            width: 60vh;
            overflow: hidden;
        }

        #chart-container-m {
            position: relative;
            height: 70vh;
            overflow: hidden;
        }
    </style>
