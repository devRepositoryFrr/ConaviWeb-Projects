@{
    ViewData["Title"] = "Validaciones de Expedientes";
}
@********************************************************************************************************************************************************************@
<div class="row form-group">
    <div class="col-md-12">
        <h3 class="text-center">Validación de expedientes</h3>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <label for="slcInventario">Tipo de inventario:</label>
        <select id="slcInventario" class="form-control">
            <option value="" disabled>- Seleccione -</option>
            <option value="1" selected>Inventario de control</option>
        </select>
    </div>
    <div class="col-md-4">
        <label for="slcArea">Unidad Administrativa Generadora:</label>
        <select id="slcArea" class="form-control" asp-items="@(new SelectList((System.Collections.IEnumerable)ViewData["AreaCatalogo"], "Id", "Descripcion"))" onchange="getExpedientes()">
            <option value="" disabled selected>- Seleccione -</option>
        </select>
    </div>
    @*<div class="col-md-4">
        <label for="btn_get_expedientes">&nbsp;</label>
        <button id="btn_get_expedientes" onclick="getExpedientes()" class="btn-primary form-control" title="Aceptar">Aceptar</button>
    </div>*@
</div>
<div class="row">
    <div class="col-md-12" id="alertAjax">
        @Html.Raw(@ViewBag.Alert)
    </div>
</div>
<div class="row form-group">
    <div class="col-md-12">
        <h3 class="text-center" id="h3title">Inventario </h3>
    </div>
</div>
@*<div id="divtableExpedientes">
    <div class="row">
        <div class="col-md-12">
            <form id="formTable">
                <table id="tableExpedientes" class="table">
                    <thead>
                        <tr>
                            <th>
                                No. Prog.
                            </th>
                            <th>
                                No. Ejem.
                            </th>
                            <th>
                                Tipo de Soporte
                            </th>
                            <th>
                                Título del Libro
                            </th>
                            <th>
                                Nombre del Autor
                            </th>
                            <th>
                                Tema
                            </th>
                            <th>
                                Editorial
                            </th>
                            <th>
                                Año
                            </th>
                            <th>
                                ISBN/ISSN
                            </th>
                            <th>
                                No. Pág.
                            </th>
                            <th>
                                No. Volumen
                            </th>
                            <th>
                                &nbsp;
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
</div>*@
<div class="row" id="divtableExpedientesControl">
    <div class="col-md-12">
        <form id="formTable">
            <table id="tableExpedientesControl" class="table">
                <thead>
                    <tr>
                        <th>
                            No. Prog.
                        </th>
                        <th>
                            Cve del Expediente
                        </th>
                        <th>
                            Nombre del Expediente
                        </th>
                        <th>
                            No. de Legajos
                        </th>
                        <th>
                            Primero (antiguo)
                        </th>
                        <th>
                            Último (reciente)
                        </th>
                        <th>
                            Estatus
                        </th>
                        <th>
                            &nbsp;
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </form>
    </div>
</div>
<!-- Modal VoBo Expediente biblihemerográfico -->
@*<div class="modal fade fade-in" style="z-index:1041" id="showModalVoBoExpedienteBiblio" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_VoBoExpedienteBiblio")
            }
        </div>
    </div>
</div>*@
<!-- Modal Revalidacion Expediente bibliohemerográfico -->
@*<div class="modal fade fade-in" style="z-index:1041" id="showModalRevalidacionExpedienteBiblio" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_RevalidacionExpedienteBiblio")
            }
        </div>
    </div>
</div>*@

@*Modal información del expediente*@
<div id="infoExpediente">
    @{
        @await Html.PartialAsync("../Expedientes/_InfoExpedienteControl")
    }
</div>

@* Modal VoBo Expediente Control *@
<div class="modal fade fade-in" style="z-index:1041" id="showModalVoBoExpedienteControl" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_VoBoExpedienteControl")
            }
        </div>
    </div>
</div>
@* Modal Revalidacion Expediente Control *@
<div class="modal fade fade-in" style="z-index:1041" id="showModalRevalidacionExpedienteControl" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_RevalidacionExpedienteControl")
            }
        </div>
    </div>
</div>
<hr />
@*<script src="https://framework-gb.cdn.gob.mx/assets/scripts/jquery-ui-datepicker.js"></script>*@

<!-- DataTables local-->
@*<link href="/js/datatable2/datatables.min.css" rel="stylesheet" type="text/css" />
    <script src="../js/datatable2/datatables.min.js" type="text/javascript"></script>*@
<!-- Datatables CDN -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    var table;
    $(document).ready(function () {
        showAlert();
        $("#divtableExpedientesControl").hide();
        $('#showModalVoBoExpedienteControl').on('show.bs.modal', function (e) {
            var expId = $(e.relatedTarget).data('exp-id');
            $(e.currentTarget).find('#idExpediente').val(expId);
        });
        $('#showModalRevalidacionExpedienteControl').on('show.bs.modal', function (e) {
            $('#lbl_error').text('').hide();
            var expId = $(e.relatedTarget).data('exp-id');
            $(e.currentTarget).find('#idExpediente').val(expId);
        });
        $('#modalExpediente').on('show.bs.modal', function (e) {
            var bookId = $(e.relatedTarget).data('exp-id');
            if (!isNaN(bookId)) {
                $.ajax({
                    url: "@Url.Action("GetExpedienteControl", "InventarioControl")", // Url
                    data: {
                        // Datos / Parámetros
                        Id: bookId
                    },
                    type: "post"  // Verbo HTTP
                }).done(function (result) {
                    if (result.id != null) {
                        $('#hd_id_expediente').val(result.id);
                        $('#slctClaveExp option[value="' + result.idExpediente + '"]').prop('selected', true);
                        $('#Legajos').val(result.legajos);
                        $('#Nombre').val(result.nombre);
                        $('#Observaciones').val(result.observaciones);
                        var fprimero = new Date(result.fechaPrimeroAntiguo);
                        var month = fprimero.getMonth() + 1;
                        var day = fprimero.getDate();
                        fprimero = fprimero.getFullYear() + '/' + (month < 10 ? '0' : '') + month + '/' + (day < 10 ? '0' : '') + day;
                        $('#fprimero_antiguo').val(fprimero);
                        var fultimo = new Date(result.fechaUltimoReciente);
                        var month = fultimo.getMonth() + 1;
                        var day = fultimo.getDate();
                        fultimo = fultimo.getFullYear() + '/' + (month < 10 ? '0' : '') + month + '/' + (day < 10 ? '0' : '') + day;
                        $('#fultimo_reciente').val(fultimo);
                        $('#Fojas').val(result.fojas);
                        $('#aniosArchivoCon').val(result.aniosResguardo);
                        result.idTipoDocumental != null ? $('#slctTipoDocumental option[value="' + result.idTipoDocumental + '"]').prop('selected', true) : $('#slctTipoDocumental option:eq(0)').prop('selected', true);
                        result.idTipoSoporte != null ? $('#slctTipoSoporte option[value="' + result.idTipoSoporte + '"]').prop('selected', true) : $('#slctTipoSoporte option:eq(0)').prop('selected', true);
                        result.noPartes != null ? $('#text_partes').val(result.noPartes) : $('#text_partes').val('0');
                        if (result.fechaElaboracion != null) {
                            var felaboracion = new Date(result.fechaElaboracion);
                            var month = felaboracion.getMonth() + 1;
                            var day = felaboracion.getDate();
                            felaboracion = felaboracion.getFullYear() + '/' + (month < 10 ? '0' : '') + month + '/' + (day < 10 ? '0' : '') + day;
                            $('#felaboracion_nexp').val(felaboracion);
                        }
                        $("#modalExpediente").find("input[type=text], input[type=number], textarea, select").prop("disabled", true);
                        //$("#modalExpediente").find("input[type=text], input[type=number], textarea, select").replaceWith(function () {
                        //    return this.tagName == 'SELECT' ? '<div class="form-control" style="min-height: 39px; height:100%;">' + $('#' + this.id + ' option:selected').text() + '</div>' : '<div class="form-control" style="min-height: 39px; height:100%;">' + $(this).val() + '</div>';
                        //});
                    } else {
                        $('#modalExpediente').modal('toggle');
                        window.scrollTo(0,0);
                        $("#alertAjax").append(result);
                        showAlert();
                    }
                })
                // Se ejecuta si se produjo un error.
                .fail(function (xhr, status, error) {
                    // Mostramos un mensaje de error.
                    //$("#ErrorAlert").show("slow").delay(2000).hide("slow");

                    // Escondemos el Ajax Loader
                    //$("#AjaxLoader").hide("slow");

                    // Habilitamos el botón de Submit
                    //$("#SubmitBtn").prop("disabled", false);
                })
                // Hacer algo siempre, haya sido exitosa o no.
                .always(function () {

                });
                //$(e.currentTarget).find('#idSerie').val(bookId);
            }
        });
        $("#btn_vobo").on("click", function (e) {
            // Deshabilitamos el botón de Submit
            $("#btn_vobo").prop("disabled", true);
            var id_exp = $("#showModalVoBoExpedienteControl").find("#idExpediente").val();
            var formData = new FormData();
            formData.append("idExp", id_exp);
            $.ajax({
                url: "@Url.Action("VoBoExpedienteControl", "InventarioValidacion")", // Url
                type: 'post',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
            })
            // Se ejecuta si todo fue bien.
            .done(function (result) {
                //console.log(result);
                if (result != null) {
                    // Habilitamos el botón de Submit
                    $("#btn_vobo").prop("disabled", false);
                    // Mostramos un mensaje de éxito.
                    $("#alertAjax").append(result);
                    showAlert();
                    $("#showModalVoBoExpedienteControl").modal('toggle');
                } else {
                    // Mostramos un mensaje de error.
                    $("#alertAjax").append(result);
                    // Habilitamos el botón de Submit
                    $("#btn_vobo").prop("disabled", false);
                    showAlert();
                }
            })
            // Se ejecuta si se produjo un error.
            .fail(function (xhr, status, error) {
                // Habilitamos el botón de Submit
                $("#btn_vobo").prop("disabled", false);
            })
            // Hacer algo siempre, haya sido exitosa o no.
            .always(function () {
                showAlert();
                $('body,html').animate({
                    scrollTop: 100
                }, 600);
                getExpedientes();
            });
        });
        @*$("#btn_vobo_bb").on("click", function (e) {
            // Deshabilitamos el botón de Submit
            $("#btn_vobo_bb").prop("disabled", true);
            var id_exp = $("#showModalVoBoExpedienteBiblio").find("#idExpediente").val();
            var formData = new FormData();
            formData.append("idExp", id_exp);
            $.ajax({
                url: "@Url.Action("VoBoExpedienteBiblio", "InventarioValidacion")", // Url
                type: 'post',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
            })
            // Se ejecuta si todo fue bien.
            .done(function (result) {
                //console.log(result);
                if (result != null) {
                    // Habilitamos el botón de Submit
                    $("#btn_vobo_bb").prop("disabled", false);
                    // Mostramos un mensaje de éxito.
                    $("#alertAjax").append(result);
                    showAlert();
                    $("#showModalVoBoExpedienteBiblio").modal('toggle');
                } else {
                    // Mostramos un mensaje de error.
                    $("#alertAjax").append(result);
                    // Habilitamos el botón de Submit
                    $("#btn_vobo_bb").prop("disabled", false);
                    showAlert();
                    $("#showModalVoBoExpedienteBiblio").modal('toggle');
                }
            })
            // Se ejecuta si se produjo un error.
            .fail(function (xhr, status, error) {
                // Habilitamos el botón de Submit
                $("#btn_vobo_bb").prop("disabled", false);
            })
            // Hacer algo siempre, haya sido exitosa o no.
            .always(function () {
                showAlert();
                $('body,html').animate({
                    scrollTop: 100
                }, 600);
                getExpedientes();
            });
        });*@
        $("#btn_reval").on("click", function (e) {
            // Deshabilitamos el botón de Submit
            $("#btn_reval").prop("disabled", true);
            var obs = ($('#txt_observaciones_revalidacion').val()).trim();
            if (obs == '') {
                $("#lbl_error").text('Describa el motivo');
                $('#lbl_error').show('slow');
                $("#btn_reval").prop("disabled", false);
                return;
            }
            var id_exp = $("#showModalRevalidacionExpedienteControl").find("#idExpediente").val();
            var formData = new FormData();
            formData.append("idExp", id_exp);
            formData.append("observaciones", obs);
            $.ajax({
                url: "@Url.Action("RevalidacionExpedienteControl", "InventarioValidacion")", // Url
                type: 'post',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
            })
            // Se ejecuta si todo fue bien.
            .done(function (result) {
                //console.log(result);
                if (result != null) {
                    // Habilitamos el botón de Submit
                    $("#btn_reval").prop("disabled", false);
                    // Mostramos un mensaje de éxito.
                    $("#alertAjax").append(result);
                    showAlert();
                    $("#showModalRevalidacionExpedienteControl").modal('toggle');
                } else {
                    // Mostramos un mensaje de error.
                    $("#alertAjax").append(result);
                    // Habilitamos el botón de Submit
                    $("#btn_reval").prop("disabled", false);
                    showAlert();
                    $("#showModalRevalidacionExpedienteControl").modal('toggle');
                }
            })
            // Se ejecuta si se produjo un error.
            .fail(function (xhr, status, error) {
                // Habilitamos el botón de Submit
                $("#btn_reval").prop("disabled", false);
            })
            // Hacer algo siempre, haya sido exitosa o no.
            .always(function () {
                showAlert();
                $('body,html').animate({
                    scrollTop: 100
                }, 600);
                getExpedientes();
            });
        });
        @*$("#btn_reval_bb").on("click", function (e) {
            // Deshabilitamos el botón de Submit
            $("#btn_reval_bb").prop("disabled", true);
            var id_exp = $("#showModalRevalidacionExpedienteBiblio").find("#idExpediente").val();
            var formData = new FormData();
            formData.append("idExp", id_exp);
            $.ajax({
                url: "@Url.Action("RevalidacionExpedienteBiblio", "InventarioValidacion")", // Url
                type: 'post',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
            })
            // Se ejecuta si todo fue bien.
            .done(function (result) {
                //console.log(result);
                if (result != null) {
                    // Habilitamos el botón de Submit
                    $("#btn_reval_bb").prop("disabled", false);
                    // Mostramos un mensaje de éxito.
                    $("#alertAjax").append(result);
                    showAlert();
                    $("#showModalRevalidacionExpedienteBiblio").modal('toggle');
                } else {
                    // Mostramos un mensaje de error.
                    $("#alertAjax").append(result);
                    // Habilitamos el botón de Submit
                    $("#btn_reval_bb").prop("disabled", false);
                    showAlert();
                    $("#showModalRevalidacionExpedienteBiblio").modal('toggle');
                }
            })
            // Se ejecuta si se produjo un error.
            .fail(function (xhr, status, error) {
                // Habilitamos el botón de Submit
                $("#btn_reval_bb").prop("disabled", false);
            })
            // Hacer algo siempre, haya sido exitosa o no.
            .always(function () {
                showAlert();
                $('body,html').animate({
                    scrollTop: 100
                }, 600);
                getExpedientes();
            });
        });*@
    });
    function getExpedientes() {
        $("#slcInventario, #slcArea").removeClass("alert-danger");
        const tipo = $("#slcInventario option:selected").val();
        const area = $("#slcArea option:selected").val();
        if (tipo == '') {
            $("#slcInventario").addClass("alert-danger");
            return false;
        }
        if (area == '') {
            $("#slcArea").addClass("alert-danger");
            return false;
        }
        tipo == 1 ? showTableControl() : tipo == 2 ? showTableBiblio() : '';
        tipo == 1 ? $('#h3title').html('Inventario para el control del acervo documental en los archivos de trámite') : tipo == 2 ? $('#h3title').html('Inventario de acervo bibliohemerográfico') : '';
    }
    function showTableControl() {
        var urlTipo = "";
        $("#divtableExpedientes").hide();
        //const tipo = $('#slcInventario option:selected').val();
        const idArea = $('#slcArea option:selected').val();
        urlTipo = "/InventarioValidacion/GetExpedientesControl";
        $('#divtableExpedientesControl').show();
        //table.destroy();
        //$('#' + tableName).empty();
        var tableControl = $('#tableExpedientesControl').DataTable({
            "proccessing": true,
            "serverSide": false,
            "ajax": {
                url: urlTipo,
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('@Html.AntiForgeryToken()').val(),
                    'slcPuesto' : idArea
                },
                complete: function () {
                    $("#spinner").hide();
                }
            },
            "columnDefs": columnsControl,
            "order": [[0, "desc"]],
            "autoWidth": true,
            "destroy": true,
            "scrollY": true,
            "scrollCollapse": true,
            "paging": true,
            "info": true,
            //"dom" : 'Bfrtip',
            "buttons": ['excel'],
            "scrollX": true,
            "fixedColumns": true,
            "ordering": false,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún expediente disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                }
            },
        });
        //tableControl.buttons().container().appendTo($('.col-sm-6:eq(0)', tableControl.table().container()));
    }
    @*function showTableBiblio() {
        var urlTipo = "";
        $("#divtableExpedientesControl").hide();
        //const tipo = $('#slcInventario option:selected').val();
        const idArea = $('#slcArea option:selected').val();
        urlTipo = "/InventarioValidacion/GetExpedientesBiblio";
        $('#divtableExpedientes').show();
        //table.destroy();
        //$('#' + tableName).empty();
        var table = $('#tableExpedientes').DataTable({
            "proccessing": true,
            "serverSide": false,
            "ajax": {
                url: urlTipo,
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('@Html.AntiForgeryToken()').val(),
                    'slcArea' : idArea
                },
                complete: function () {
                    $("#spinner").hide();
                }
            },
            "columnDefs": columns,
            "order": [[0, "desc"]],
            "autoWidth": true,
            "destroy": true,
            "scrollY": true,
            "scrollCollapse": true,
            "paging": true,
            "info": true,
            //"dom" : "Blfrtip",
            "buttons": ['excel'],
            "scrollX": true,
            "fixedColumns": true,
            "ordering": false,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                }
            }
        });
        //table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));
    }*@
    //var columns = [
    //    { "name": "NoProg", "data": "noProg", "targets": 0 },
    //    { "name": "Ejemplar", "data": "ejemplar", "targets": 1 },
    //    //{ "name": "TipoSoporte", "data": "soporte", "targets": 2 },
    //    {
    //        "name": "TipoSoporte",
    //        "data": null,
    //        "targets": 2,
    //        "render": function (data, type, row) {
    //            return row.claveSoporte + '-' + row.noProg + '/' + row.anio;
    //        }
    //    },
    //    { "name": "Titulo", "data": "titulo", "targets": 3 },
    //    { "name": "Autor", "data": "autor", "targets": 4 },
    //    { "name": "Tema", "data": "tema", "targets": 5 },
    //    { "name": "Editorial", "data": "editorial", "targets": 6 },
    //    { "name": "Anio", "data": "anio", "targets": 7 },
    //    { "name": "IsbnIssn", "data": "isbnIssn", "targets": 8 },
    //    { "name": "Paginas", "data": "paginas", "targets": 9 },
    //    { "name": "Volumen", "data": "volumen", "targets": 10 },
    //    {
    //        "targets": 11,
    //        "data": null,
    //        "render": function (data, type, row, meta) {
    //            var ret = "";
    //            //var ret = '<a style="cursor:pointer;" class="gold" title="Carátula" href="CaratulaControl?id=' + data.id + '" target="_blank"><span class="glyphicon glyphicon-file" aria-hidden="true"></span></a>';
    //            ret += '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalVoBoExpedienteBiblio" style="font-size:20px;"><span style="cursor:pointer;" title="VoBo" class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span></a>';
    //            ret += '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalRevalidacionExpedienteBiblio" style="font-size:20px;"><span style="cursor:pointer;" title="Revalidación" class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span></a>';
    //            //if (row.esEditable == 'editable') {
    //            //    ret += (row.estatus == 'Registro' || row.estatus == 'Revalidación') ? '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalTrashExpediente" style="font-size:20px;"><span style="cursor:pointer;" title="Eliminar" class="glyphicon glyphicon-trash" aria-hidden="true"></span></a><a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalSendValExpediente" style="font-size:20px;"><span style="cursor:pointer;" title="Enviar a revisión" class="glyphicon glyphicon-check" aria-hidden="true"></span></a>' : '';
    //            //}
    //            return ret;
    //        },
    //        "sortable": false,
    //        "className": 'text-center'
    //    },
    //];
    var columnsControl = [
        { "name": "NoProg", "data": "noProg", "targets": 0 },
        //{ "name": "Codigo", "data": "codigo", "targets": 1 },
        {
            "name": "Codigo",
            "data": null,
            "targets": 1,
            "render": function (data, type, row) {
                return row.codigo + '-' + row.consecutivo + '/' + row.periodo;
            }
        },
        { "name": "Nombre", "data": "nombre", "targets": 2 },
        { "name": "Legajos", "data": "legajos", "targets": 3 },
        {
            "name": "FechaPrimeroAntiguo",
            "data": "fechaPrimeroAntiguo",
            "targets": 4,
            "render": function (data, type, row) {
                var fprimero = new Date(row.fechaPrimeroAntiguo);
                var month = fprimero.getMonth() + 1;
                var day = fprimero.getDate();
                return (fprimero.getFullYear() + '/' + (month < 10 ? '0' : '') + month + '/' + (day < 10 ? '0' : '') + day);
            }
        },
        {
            "name": "FechaUltimoReciente",
            "data": "fechaUltimoReciente",
            "targets": 5,
            "render": function (data, type, row) {
                var fprimero = new Date(row.fechaUltimoReciente);
                var month = fprimero.getMonth() + 1;
                var day = fprimero.getDate();
                return (fprimero.getFullYear() + '/' + (month < 10 ? '0' : '') + month + '/' + (day < 10 ? '0' : '') + day);
            }
        },
        { "name": "Estatus", "data": "estatus", "targets": 6 },
        {
            "targets": 7,
            "data": null,
            "render": function (data, type, row, meta) {
                //var ret= "";
                var ret = '<a style="cursor:pointer; font-size:20px;" class="gold" title="Carátula" href="CaratulaControl?id=' + row.id + '" target="_blank"><span class="fa fa-file-text-o" aria-hidden="true"></span></a>';
                ret += '<a data-exp-id="' + row.id + '" class="gold" type="button" title="Vista general" data-toggle="modal" data-target="#modalExpediente" style="cursor:pointer; font-size:20px;"><span title="Detalles" class="fa fa-search-plus" aria-hidden="true"></span></a><br>';
                ret += row.estatus == 'Revisión' ? '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalVoBoExpedienteControl" style="font-size:20px; cursor:pointer;"><span title="VoBo" class="fa fa-check-circle-o" aria-hidden="true"></span></a>' : '';
                ret += row.estatus == 'Revisión' ? '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalRevalidacionExpedienteControl" style="cursor:pointer; font-size:20px;"><span title="Revalidación" class="fa fa-times-circle-o" aria-hidden="true"></span></a>' : '';
                if (row.esEditable == 'editable') {
                    ret += (row.estatus == 'Registro' || row.estatus == 'Revalidación') ? '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalTrashExpediente" style="cursor:pointer; font-size:20px;"><span title="Eliminar" class="glyphicon glyphicon-trash" aria-hidden="true"></span></a><a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalSendValExpediente" style="font-size:20px;"><span style="cursor:pointer;" title="Enviar a revisión" class="glyphicon glyphicon-check" aria-hidden="true"></span></a>' : '';
                }
                return ret;
            },
            "sortable": false,
            "className": 'text-center'
        },
    ];
    function showAlert() {
        setTimeout(function () {
            $("#alerta").fadeOut(1500);
        }, 3000);
        setTimeout(function () {
            $("#alerta").remove();
        }, 6000);
    }
</script>
}