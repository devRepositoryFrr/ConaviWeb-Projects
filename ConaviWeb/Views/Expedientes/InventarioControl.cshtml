@{
    ViewData["Title"] = "Inicio";
}
@********************************************************************************************************************************************************************@
@{
    @await Html.PartialAsync("../Expedientes/Botones");
}
<div class="row">
    <div class="col-md-12" id="alertAjax">
        @Html.Raw(@ViewBag.Alert)
    </div>
</div>
@*Formulario para el inventario de control del acervo documental en los archivos de trámite*@
<div class="row">
    <div class="col-md-12 form-group">
        <h3 class="text-center">Inventario para el control del acervo documental en los archivos de trámite</h3>
    </div>
</div>
<div id="divAdd">
    @{
        @await Html.PartialAsync("../Expedientes/_AddInventarioControl")
    }
</div>
<hr />
<div class="row">
    <div class="col-md-12">
        <form id="formTable">
            <table id="tableExpedientesControl" class="table">
                <thead>
                    <tr>
                        <th>
                            No. Prog.
                        </th>
                        <th>
                            Cve del Expediente
                        </th>
                        <th>
                            Nombre del Expediente
                        </th>
                        <th>
                            No. de Legajos
                        </th>
                        <th>
                            Primero (antiguo)
                        </th>
                        <th>
                            Último (reciente)
                        </th>
                        <th>
                            Estatus
                        </th>
                        <th>
                            &nbsp;
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </form>
    </div>
</div>
<br />
<button id="btn_add_exp" class="btn btn-default btn-sm pull-right" data-toggle="modal" data-target="#modalExpediente">
    <span class="glyphicon glyphicon-plus"></span> Agregar Expediente
</button>
<div id="addExpediente">
    @{
        @await Html.PartialAsync("../Expedientes/_AddExpedienteControl")
    }
</div>
<!-- Modal Drop Expediente -->
<div class="modal fade fade-in" style="z-index:1041" id="showModalTrashExpediente" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_DropExpedienteControl")
            }
        </div>
    </div>
</div>
<!-- Modal SendVal Expediente -->
<div class="modal fade fade-in" style="z-index:1041" id="showModalSendValExpediente" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_SendValExpedienteControl")
            }
        </div>
    </div>
</div>
<!-- Modal Migrar Expediente Inv TP-->
<div class="modal fade fade-in" style="z-index:1041" id="showModalMigrarTP" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_MigrarExpedienteControlInvTP")
            }
        </div>
    </div>
</div>
<!-- Modal Migrar Expediente Inv NoExpedientable -->
<div class="modal fade fade-in" style="z-index:1041" id="showModalMigrarNE" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_MigrarExpedienteControlInvNE")
            }
        </div>
    </div>
</div>
 @*Modal VoBo Expediente 
<div class="modal fade fade-in" style="z-index:1041" id="showModalVoBoExpediente" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_VoBoExpedienteControl")
            }
        </div>
    </div>
</div>
 Modal VoBo Expediente 
<div class="modal fade fade-in" style="z-index:1041" id="showModalRevalidacionExpediente" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                @await Html.PartialAsync("../Expedientes/_RevalidacionExpedienteControl")
            }
        </div>
    </div>
</div>*@

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var table;
        $(document).ready(function () {
            showAlert();
            if ($("#hd_id_inventario").val() == 0) {
                //$("#formInsertInventarioControl").show();
                $("#btn_add_exp").prop("disabled", true);
            } else {
                //$("#formInsertInventarioControl").hide();
                $("#btn_add_exp").prop("disabled", false);
            }
            showTable();
            $('#showModalTrashExpediente').on('show.bs.modal', function (e) {
                var expId = $(e.relatedTarget).data('exp-id');
                $(e.currentTarget).find('#idExpediente').val(expId);
            });
            $('#showModalSendValExpediente').on('show.bs.modal', function (e) {
                var expId = $(e.relatedTarget).data('exp-id');
                $(e.currentTarget).find('#idExpediente').val(expId);
            });
            $('#showModalMigrarTP').on('show.bs.modal', function (e) {
                var expId = $(e.relatedTarget).data('exp-id');
                $(e.currentTarget).find('#idExpediente').val(expId);
            });
            $('#showModalMigrarNE').on('show.bs.modal', function (e) {
                var expId = $(e.relatedTarget).data('exp-id');
                $(e.currentTarget).find('#idExpediente').val(expId);
            });
            //$('#showModalVoBoExpediente').on('show.bs.modal', function (e) {
            //    var expId = $(e.relatedTarget).data('exp-id');
            //    $(e.currentTarget).find('#idExpediente').val(expId);
            //});
            //$('#showModalRevalidacionExpediente').on('show.bs.modal', function (e) {
            //    var expId = $(e.relatedTarget).data('exp-id');
            //    $(e.currentTarget).find('#idExpediente').val(expId);
            //});
            $('#modalExpediente').on('hidden.bs.modal', function (e) {
                $(this).find('#formInsertExpedienteControl')[0].reset();
                $('#hd_id_expediente').val("0");
            });
            $('#modalExpediente').on('show.bs.modal', function (e) {
                var bookId = $(e.relatedTarget).data('exp-id');
                if (!isNaN(bookId)) {
                    $.ajax({
                        url: "@Url.Action("GetExpedienteControl", "InventarioControl")", // Url
                        data: {
                            // Datos / Parámetros
                            Id: bookId
                        },
                        type: "post"  // Verbo HTTP
                    }).done(function (result) {
                        if (result.id != null) {
                            $('#hd_id_expediente').val(result.id);
                            $('#slctClaveExp option[value="' + result.idExpediente + '"]').prop('selected', true);
                            $('#Legajos').val(result.legajos);
                            $('#Nombre').val(result.nombre);
                            $('#Observaciones').val(result.observaciones);
                            var fprimero = new Date(result.fechaPrimeroAntiguo);
                            var month = fprimero.getMonth() + 1;
                            var day = fprimero.getDate();
                            fprimero = (day < 10 ? '0' : '') + day + '-' + (month < 10 ? '0' : '') + month + '-' + fprimero.getFullYear();
                            $('#fprimero_antiguo').val(fprimero);
                            var fultimo = new Date(result.fechaUltimoReciente);
                            var month = fultimo.getMonth() + 1;
                            var day = fultimo.getDate();
                            fultimo = (day < 10 ? '0' : '') + day + '-' + (month < 10 ? '0' : '') + month + '-' + fultimo.getFullYear();
                            $('#fultimo_reciente').val(fultimo);
                            $('#Fojas').val(result.fojas);
                            $('#aniosArchivoCon').val(result.aniosResguardo);
                            $('#slctTipoDocumental option[value="' + result.idTipoDocumental + '"]').prop('selected', true);
                            $('#slctTipoSoporte option[value="' + result.idTipoSoporte + '"]').prop('selected', true);
                            $('#text_partes').val(result.noPartes);
                            if (result.fechaElaboracion != null) {
                                var felaboracion = new Date(result.fechaElaboracion);
                                var month = felaboracion.getMonth() + 1;
                                var day = felaboracion.getDate();
                                felaboracion = (day < 10 ? '0' : '') + day + '-' + (month < 10 ? '0' : '') + month + '-' + felaboracion.getFullYear();
                                $('#felaboracion_nexp').val(felaboracion);
                            }
                        } else {
                            $('#modalExpediente').modal('toggle');
                            window.scrollTo(0,0);
                            $("#alertAjax").append(result);
                            showAlert();
                        }
                    })
                    // Se ejecuta si se produjo un error.
                    .fail(function (xhr, status, error) {
                        // Mostramos un mensaje de error.
                        //$("#ErrorAlert").show("slow").delay(2000).hide("slow");

                        // Escondemos el Ajax Loader
                        //$("#AjaxLoader").hide("slow");

                        // Habilitamos el botón de Submit
                        //$("#SubmitBtn").prop("disabled", false);
                    })
                    // Hacer algo siempre, haya sido exitosa o no.
                    .always(function () {

                    });
                    //$(e.currentTarget).find('#idSerie').val(bookId);
                }
            });
        });
        function showTable() {
            var urlTipo = "";
            urlTipo = "/InventarioControl/ExpedientesControl";
            table = $('#tableExpedientesControl').DataTable({
                "proccessing": true,
                "serverSide": false,
                "ajax": {
                    url: urlTipo,
                    type: 'GET',
                    headers: { 'RequestVerificationToken': $('@Html.AntiForgeryToken()').val() },
                    complete: function () {
                        $("#spinner").hide();
                    }
                },
                "columnDefs": columns,
                "order": [[0, "desc"]],
                "autoWidth": true,
                "destroy": true,
                "scrollY": true,
                "scrollCollapse": true,
                "paging": true,
                "info": true,
                "buttons": ['excel'],
                "scrollX": true,
                "fixedColumns": true,
                "ordering": false,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    }
                }
            });
        }
        var columns = [
            { "name": "NoProg", "data": "noProg", "targets": 0},
            {
                "data": null,
                "targets": 1,
                "render": function (data, type, row) {
                    //var fprimero = (new Date(row.fechaPrimeroAntiguo)).getFullYear();
                    //var freciente = (new Date(row.fechaUltimoReciente)).getFullYear();
                    //var periodo = freciente == fprimero ? fprimero : fprimero + '-' + freciente;
                    return row.codigo + '-' + row.consecutivo + '/' + row.periodo;
                }
            },
            { "name": "Nombre", "data": "nombre", "targets": 2 },
            { "name": "Legajos", "data": "legajos", "targets": 3 },
            {
                "name": "FechaPrimeroAntiguo",
                "data": "fechaPrimeroAntiguo",
                "targets": 4,
                "render": function (data, type, row) {
                    var fprimero = new Date(row.fechaPrimeroAntiguo);
                    var month = fprimero.getMonth() + 1;
                    var day = fprimero.getDate();
                    return ((day < 10 ? '0' : '') + day + '-' + (month < 10 ? '0' : '') + month + '-' + fprimero.getFullYear());
                }
            },
            {
                "name": "FechaUltimoReciente",
                "data": "fechaUltimoReciente",
                "targets": 5,
                "render": function (data, type, row) {
                    var fprimero = new Date(row.fechaUltimoReciente);
                    var month = fprimero.getMonth() + 1;
                    var day = fprimero.getDate();
                    return ((day < 10 ? '0' : '') + day + '-' + (month < 10 ? '0' : '') + month + '-' + fprimero.getFullYear());
                }
            },
            //{ "name": "Estatus", "data": "estatus", "targets": 6 },
            {
                "name": "Estatus",
                "data": null,
                "targets": 6,
                "render": function (data, type, row) {
                    return row.estatus == 'Revalidación' ? row.estatus + '<br><p class="help-block small">' + row.observacionesRevalidacion + '</p>' : row.estatus;
                }
            },
            {
                "targets": 7,
                "data": null,
                "render": function (data, type, row, meta) {
                    var ret = '<a style="cursor:pointer;" class="gold" title="Carátula" href="CaratulaControl?id=' + data.id + '" target="_blank" style="font-size: 20px;"><span class="glyphicon glyphicon-file" aria-hidden="true"></span></a><br>';
                    //ret += row.estatus == 'Revisión' ? '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalVoBoExpediente" style="font-size:20px;"><span style="cursor:pointer;" title="VoBo" class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span></a>' : '';
                    //ret += row.estatus == 'Revisión' ? '<a data-exp-id=' + row.id + ' class="gold" type="button" data-toggle="modal" data-target="#showModalRevalidacionExpediente" style="font-size:20px;"><span style="cursor:pointer;" title="Revalidación" class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span></a>' : '';
                    if (row.esEditable == 'editable') {         //is editable for owner
                        ret += (row.estatus == 'Registro' || row.estatus == 'Revalidación') ? '<a data-exp-id="' + row.id + '" class="gold" type="button" title="Editar" data-toggle="modal" data-target="#modalExpediente" style="font-size:20px;"><span style="cursor:pointer;" class="glyphicon glyphicon-edit" aria-hidden="true"></span></a><br><a data-exp-id="' + row.id + '" class="gold" type="button" title="Eliminar" data-toggle="modal" data-target="#showModalTrashExpediente" style="font-size:20px;"><span style="cursor:pointer;" class="glyphicon glyphicon-trash" aria-hidden="true"></span></a><br><a data-exp-id=' + row.id + ' class="gold" type="button" title="Enviar a revisión" data-toggle="modal" data-target="#showModalSendValExpediente" style="font-size:20px;"><span style="cursor:pointer;" class="glyphicon glyphicon-check" aria-hidden="true"></span></a><br>' : '';
                        ret += (row.migradoTP == 0 && row.estatus == 'Aceptado') ? '<a data-exp-id="' + row.id + '" class="gold" type="button" title="Migrar a Inventario de Transferencia Primaria al Archivo de Concentración" data-toggle="modal" data-target="#showModalMigrarTP" style="font-size: 20px;"><span  style="cursor:pointer;" class="glyphicon glyphicon-share" aria-hidden="true"></span></a><br>' : '';
                        ret += (row.migradoNE == 0 && row.estatus == 'Aceptado') ? '<a data-exp-id="' + row.id + '" class="gold" type="button" title="Migrar a Inventario de Documentación No Expedientable" data-toggle="modal" data-target="#showModalMigrarNE" style="font-size: 20px;"><span  style="cursor:pointer;" class="glyphicon glyphicon-new-window" aria-hidden="true"></span></a><br>' : '';
                        ret += (row.estatus == 'Revisión') ? '<span style="color: #b8925f; font-size: 20px;" title="Enviado a revisión" class="glyphicon glyphicon-hourglass" aria-hidden="true"></span></a><br>' : '';
                    }
                    return ret;
                },
                "sortable": false,
                "className": 'text-center'
            },
        ];
        function showAlert() {
            setTimeout(function () {
                $("#alerta").fadeOut(1500);
            }, 3000);
            setTimeout(function () {
                $("#alerta").remove();
            }, 6000);
        }
    </script>
}